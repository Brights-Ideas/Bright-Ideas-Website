using  System;
using  System.Collections.Generic;
using  System.Linq.Expressions;
using  System.Web;
using  Umbraco.Core.Models;
using  Umbraco.Core.Models.PublishedContent;
using  Umbraco.Web;
using  Umbraco.ModelsBuilder;
using  Umbraco.ModelsBuilder.Umbraco;
[assembly: PureLiveAssembly]
[assembly:ModelsBuilderAssembly(PureLive = true, SourceHash = "654fcba486ddf946")]
[assembly:System.Reflection.AssemblyVersion("0.0.0.1")]


// FILE: models.generated.cs

//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.5.96
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------















namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1051 with alias "umbMaster"
	/// <summary>Master</summary>
	public partial interface IUmbMaster : IPublishedContent
	{
		/// <summary>Description</summary>
		string Description { get; }

		/// <summary>Keywords</summary>
		string Keywords { get; }

		/// <summary>Page title</summary>
		string Title { get; }

		/// <summary>Hide in navigation?</summary>
		bool UmbracoNaviHide { get; }
	}

	/// <summary>Master</summary>
	[PublishedContentModel("umbMaster")]
	public partial class UmbMaster : PublishedContentModel, IUmbMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "umbMaster";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UmbMaster(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UmbMaster, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Description
		///</summary>
		[ImplementPropertyType("description")]
		public string Description
		{
			get { return GetDescription(this); }
		}

		/// <summary>Static getter for Description</summary>
		public static string GetDescription(IUmbMaster that) { return that.GetPropertyValue<string>("description"); }

		///<summary>
		/// Keywords
		///</summary>
		[ImplementPropertyType("keywords")]
		public string Keywords
		{
			get { return GetKeywords(this); }
		}

		/// <summary>Static getter for Keywords</summary>
		public static string GetKeywords(IUmbMaster that) { return that.GetPropertyValue<string>("keywords"); }

		///<summary>
		/// Page title: The page title overrules the name this page was given. So if the page name is "About us" the title could be "About Our Company Name".
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return GetTitle(this); }
		}

		/// <summary>Static getter for Page title</summary>
		public static string GetTitle(IUmbMaster that) { return that.GetPropertyValue<string>("title"); }

		///<summary>
		/// Hide in navigation?: If set to "Yes", this page will be hidden from the navigation menu at the top.
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return GetUmbracoNaviHide(this); }
		}

		/// <summary>Static getter for Hide in navigation?</summary>
		public static bool GetUmbracoNaviHide(IUmbMaster that) { return that.GetPropertyValue<bool>("umbracoNaviHide"); }
	}

	/// <summary>News Item</summary>
	[PublishedContentModel("umbNewsItem")]
	public partial class UmbNewsItem : UmbMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "umbNewsItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UmbNewsItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UmbNewsItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Content
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("image")]
		public object Image
		{
			get { return this.GetPropertyValue("image"); }
		}

		///<summary>
		/// Publish date: You can overrule the date shown on the site by changing it here. If you don't set a date explicitly here then the news item's create date will be shown.
		///</summary>
		[ImplementPropertyType("publishDate")]
		public DateTime PublishDate
		{
			get { return this.GetPropertyValue<DateTime>("publishDate"); }
		}

		///<summary>
		/// Subheader
		///</summary>
		[ImplementPropertyType("subheader")]
		public string Subheader
		{
			get { return this.GetPropertyValue<string>("subheader"); }
		}
	}

	/// <summary>News Overview</summary>
	[PublishedContentModel("umbNewsOverview")]
	public partial class UmbNewsOverview : UmbMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "umbNewsOverview";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UmbNewsOverview(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UmbNewsOverview, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>TextPage</summary>
	[PublishedContentModel("umbTextPage")]
	public partial class UmbTextPage : UmbMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "umbTextPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UmbTextPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UmbTextPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Content
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		}

		///<summary>
		/// Content Panels: Select the feature panels to appear in a row
		///</summary>
		[ImplementPropertyType("contentPanels")]
		public object ContentPanels
		{
			get { return this.GetPropertyValue("contentPanels"); }
		}

		///<summary>
		/// Featured Page?: Is this a page that should be featured on the home page?
		///</summary>
		[ImplementPropertyType("featuredPage")]
		public bool FeaturedPage
		{
			get { return this.GetPropertyValue<bool>("featuredPage"); }
		}

		///<summary>
		/// Font Icon
		///</summary>
		[ImplementPropertyType("fontIcon")]
		public string FontIcon
		{
			get { return this.GetPropertyValue<string>("fontIcon"); }
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("image")]
		public object Image
		{
			get { return this.GetPropertyValue("image"); }
		}

		///<summary>
		/// Service Links
		///</summary>
		[ImplementPropertyType("serviceLinks")]
		public object ServiceLinks
		{
			get { return this.GetPropertyValue("serviceLinks"); }
		}

		///<summary>
		/// Sub title
		///</summary>
		[ImplementPropertyType("subTitle")]
		public string SubTitle
		{
			get { return this.GetPropertyValue<string>("subTitle"); }
		}
	}

	/// <summary>Portfolio Overview</summary>
	[PublishedContentModel("umbPortfolioOverview")]
	public partial class UmbPortfolioOverview : UmbMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "umbPortfolioOverview";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UmbPortfolioOverview(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UmbPortfolioOverview, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// bodyText
		///</summary>
		[ImplementPropertyType("bodytext")]
		public IHtmlString Bodytext
		{
			get { return this.GetPropertyValue<IHtmlString>("bodytext"); }
		}

		///<summary>
		/// Content Panels
		///</summary>
		[ImplementPropertyType("contentPanels")]
		public object ContentPanels
		{
			get { return this.GetPropertyValue("contentPanels"); }
		}

		///<summary>
		/// Service Links
		///</summary>
		[ImplementPropertyType("serviceLinks")]
		public object ServiceLinks
		{
			get { return this.GetPropertyValue("serviceLinks"); }
		}
	}

	/// <summary>Portfolio Item</summary>
	[PublishedContentModel("umbPortfolioItem")]
	public partial class UmbPortfolioItem : UmbMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "umbPortfolioItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UmbPortfolioItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UmbPortfolioItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// BodyText
		///</summary>
		[ImplementPropertyType("bodytext")]
		public IHtmlString Bodytext
		{
			get { return this.GetPropertyValue<IHtmlString>("bodytext"); }
		}

		///<summary>
		/// Client
		///</summary>
		[ImplementPropertyType("client")]
		public string Client
		{
			get { return this.GetPropertyValue<string>("client"); }
		}

		///<summary>
		/// Client Website
		///</summary>
		[ImplementPropertyType("clientWebsite")]
		public string ClientWebsite
		{
			get { return this.GetPropertyValue<string>("clientWebsite"); }
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("image")]
		public object Image
		{
			get { return this.GetPropertyValue("image"); }
		}
	}

	/// <summary>ContactForm</summary>
	[PublishedContentModel("Contactform")]
	public partial class Contactform : UmbTextPage
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Contactform";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Contactform(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Contactform, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Email Subject
		///</summary>
		[ImplementPropertyType("emailSubject")]
		public string EmailSubject
		{
			get { return this.GetPropertyValue<string>("emailSubject"); }
		}

		///<summary>
		/// Recipient Email Address
		///</summary>
		[ImplementPropertyType("recipientEmailAddress")]
		public string RecipientEmailAddress
		{
			get { return this.GetPropertyValue<string>("recipientEmailAddress"); }
		}

		///<summary>
		/// Sender Email Address
		///</summary>
		[ImplementPropertyType("senderEmailAddress")]
		public string SenderEmailAddress
		{
			get { return this.GetPropertyValue<string>("senderEmailAddress"); }
		}

		///<summary>
		/// Thank You Page
		///</summary>
		[ImplementPropertyType("thankYouPage")]
		public object ThankYouPage
		{
			get { return this.GetPropertyValue("thankYouPage"); }
		}
	}

	/// <summary>Email Template</summary>
	[PublishedContentModel("EmailTemplate")]
	public partial class EmailTemplate : UmbMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "EmailTemplate";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public EmailTemplate(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<EmailTemplate, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Bcc Listing
		///</summary>
		[ImplementPropertyType("bccListing")]
		public string BccListing
		{
			get { return this.GetPropertyValue<string>("bccListing"); }
		}

		///<summary>
		/// Body
		///</summary>
		[ImplementPropertyType("body")]
		public string Body
		{
			get { return this.GetPropertyValue<string>("body"); }
		}

		///<summary>
		/// Cc Listing
		///</summary>
		[ImplementPropertyType("ccListing")]
		public string CcListing
		{
			get { return this.GetPropertyValue<string>("ccListing"); }
		}

		///<summary>
		/// Email Type
		///</summary>
		[ImplementPropertyType("emailType")]
		public string EmailType
		{
			get { return this.GetPropertyValue<string>("emailType"); }
		}

		///<summary>
		/// Recipient Email
		///</summary>
		[ImplementPropertyType("recipientEmail")]
		public string RecipientEmail
		{
			get { return this.GetPropertyValue<string>("recipientEmail"); }
		}

		///<summary>
		/// Recipient Name
		///</summary>
		[ImplementPropertyType("recipientName")]
		public string RecipientName
		{
			get { return this.GetPropertyValue<string>("recipientName"); }
		}

		///<summary>
		/// Sender Email
		///</summary>
		[ImplementPropertyType("senderEmail")]
		public string SenderEmail
		{
			get { return this.GetPropertyValue<string>("senderEmail"); }
		}

		///<summary>
		/// Sender Name
		///</summary>
		[ImplementPropertyType("senderName")]
		public string SenderName
		{
			get { return this.GetPropertyValue<string>("senderName"); }
		}

		///<summary>
		/// Subject
		///</summary>
		[ImplementPropertyType("subject")]
		public string Subject
		{
			get { return this.GetPropertyValue<string>("subject"); }
		}
	}

	/// <summary>Email - Contact Us</summary>
	[PublishedContentModel("EmailContactUs")]
	public partial class EmailContactUs : EmailTemplate
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "EmailContactUs";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public EmailContactUs(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<EmailContactUs, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>ContentPanels</summary>
	[PublishedContentModel("Contentpanels")]
	public partial class Contentpanels : UmbMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Contentpanels";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Contentpanels(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Contentpanels, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>ContentPanel</summary>
	[PublishedContentModel("Contentpanel")]
	public partial class Contentpanel : UmbMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Contentpanel";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Contentpanel(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Contentpanel, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Panel text
		///</summary>
		[ImplementPropertyType("panelText")]
		public IHtmlString PanelText
		{
			get { return this.GetPropertyValue<IHtmlString>("panelText"); }
		}
	}

	/// <summary>Sitemap</summary>
	[PublishedContentModel("Sitemap")]
	public partial class Sitemap : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Sitemap";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Sitemap(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Sitemap, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Hide from Navigation
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return this.GetPropertyValue<bool>("umbracoNaviHide"); }
		}
	}

	/// <summary>Contact</summary>
	[PublishedContentModel("umbContact")]
	public partial class UmbContact : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "umbContact";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UmbContact(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UmbContact, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Sub title
		///</summary>
		[ImplementPropertyType("subTitle")]
		public string SubTitle
		{
			get { return this.GetPropertyValue<string>("subTitle"); }
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return this.GetPropertyValue<string>("title"); }
		}

		///<summary>
		/// Mail To Address: When someone fills out the contact form, where should their e-mail be sent?
		///</summary>
		[ImplementPropertyType("umbEmailTo")]
		public string UmbEmailTo
		{
			get { return this.GetPropertyValue<string>("umbEmailTo"); }
		}
	}

	/// <summary>Feature</summary>
	[PublishedContentModel("umbFeature")]
	public partial class UmbFeature : PublishedContentModel, IUmbMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "umbFeature";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UmbFeature(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UmbFeature, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Feature Header
		///</summary>
		[ImplementPropertyType("featureHeader")]
		public string FeatureHeader
		{
			get { return this.GetPropertyValue<string>("featureHeader"); }
		}

		///<summary>
		/// Feature Icon
		///</summary>
		[ImplementPropertyType("featureIcon")]
		public string FeatureIcon
		{
			get { return this.GetPropertyValue<string>("featureIcon"); }
		}

		///<summary>
		/// Feature Page?: Is this a page that should be featured on the home page?
		///</summary>
		[ImplementPropertyType("featurePage")]
		public bool FeaturePage
		{
			get { return this.GetPropertyValue<bool>("featurePage"); }
		}

		///<summary>
		/// Feature Text
		///</summary>
		[ImplementPropertyType("featureText")]
		public string FeatureText
		{
			get { return this.GetPropertyValue<string>("featureText"); }
		}

		///<summary>
		/// Image
		///</summary>
		[ImplementPropertyType("image")]
		public object Image
		{
			get { return this.GetPropertyValue("image"); }
		}

		///<summary>
		/// Description
		///</summary>
		[ImplementPropertyType("description")]
		public string Description
		{
			get { return UmbMaster.GetDescription(this); }
		}

		///<summary>
		/// Keywords
		///</summary>
		[ImplementPropertyType("keywords")]
		public string Keywords
		{
			get { return UmbMaster.GetKeywords(this); }
		}

		///<summary>
		/// Page title: The page title overrules the name this page was given. So if the page name is "About us" the title could be "About Our Company Name".
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return UmbMaster.GetTitle(this); }
		}

		///<summary>
		/// Hide in navigation?: If set to "Yes", this page will be hidden from the navigation menu at the top.
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return UmbMaster.GetUmbracoNaviHide(this); }
		}
	}

	/// <summary>Portfolio</summary>
	[PublishedContentModel("umbPortfolio")]
	public partial class UmbPortfolio : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "umbPortfolio";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UmbPortfolio(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UmbPortfolio, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Portfolio Media Folder
		///</summary>
		[ImplementPropertyType("portfolioMediaFolder")]
		public object PortfolioMediaFolder
		{
			get { return this.GetPropertyValue("portfolioMediaFolder"); }
		}

		///<summary>
		/// Portfolio Text
		///</summary>
		[ImplementPropertyType("portfolioText")]
		public string PortfolioText
		{
			get { return this.GetPropertyValue<string>("portfolioText"); }
		}

		///<summary>
		/// Portfolio Title
		///</summary>
		[ImplementPropertyType("portfolioTitle")]
		public string PortfolioTitle
		{
			get { return this.GetPropertyValue<string>("portfolioTitle"); }
		}
	}

	/// <summary>Property Details</summary>
	[PublishedContentModel("umbPropertyDetails")]
	public partial class UmbPropertyDetails : UmbMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "umbPropertyDetails";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UmbPropertyDetails(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UmbPropertyDetails, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Address 2
		///</summary>
		[ImplementPropertyType("address2")]
		public string Address2
		{
			get { return this.GetPropertyValue<string>("address2"); }
		}

		///<summary>
		/// Address Name
		///</summary>
		[ImplementPropertyType("addressName")]
		public string AddressName
		{
			get { return this.GetPropertyValue<string>("addressName"); }
		}

		///<summary>
		/// Address Number
		///</summary>
		[ImplementPropertyType("addressNumber")]
		public string AddressNumber
		{
			get { return this.GetPropertyValue<string>("addressNumber"); }
		}

		///<summary>
		/// Address Postcode
		///</summary>
		[ImplementPropertyType("addressPostcode")]
		public string AddressPostcode
		{
			get { return this.GetPropertyValue<string>("addressPostcode"); }
		}

		///<summary>
		/// Address Street
		///</summary>
		[ImplementPropertyType("addressStreet")]
		public string AddressStreet
		{
			get { return this.GetPropertyValue<string>("addressStreet"); }
		}

		///<summary>
		/// Availability: The availability of the property for example To Let and Let. Which corresponds to the lookups below: 1 = On Hold 2 = To Let 3 = References Pending 4 = Let Agreed 5 = Let 6 = Withdrawn
		///</summary>
		[ImplementPropertyType("availability")]
		public string Availability
		{
			get { return this.GetPropertyValue<string>("availability"); }
		}

		///<summary>
		/// Department
		///</summary>
		[ImplementPropertyType("department")]
		public string Department
		{
			get { return this.GetPropertyValue<string>("department"); }
		}

		///<summary>
		/// Display Address
		///</summary>
		[ImplementPropertyType("displayAddress")]
		public string DisplayAddress
		{
			get { return this.GetPropertyValue<string>("displayAddress"); }
		}

		///<summary>
		/// Display Property Type
		///</summary>
		[ImplementPropertyType("displayPropertyType")]
		public string DisplayPropertyType
		{
			get { return this.GetPropertyValue<string>("displayPropertyType"); }
		}

		///<summary>
		/// Full Description
		///</summary>
		[ImplementPropertyType("fullDescription")]
		public IHtmlString FullDescription
		{
			get { return this.GetPropertyValue<IHtmlString>("fullDescription"); }
		}

		///<summary>
		/// Images
		///</summary>
		[ImplementPropertyType("images")]
		public string Images
		{
			get { return this.GetPropertyValue<string>("images"); }
		}

		///<summary>
		/// Main Summary
		///</summary>
		[ImplementPropertyType("mainSummary")]
		public string MainSummary
		{
			get { return this.GetPropertyValue<string>("mainSummary"); }
		}

		///<summary>
		/// Price
		///</summary>
		[ImplementPropertyType("price")]
		public int Price
		{
			get { return this.GetPropertyValue<int>("price"); }
		}

		///<summary>
		/// Property Bathrooms
		///</summary>
		[ImplementPropertyType("propertyBathrooms")]
		public string PropertyBathrooms
		{
			get { return this.GetPropertyValue<string>("propertyBathrooms"); }
		}

		///<summary>
		/// Property Bedrooms
		///</summary>
		[ImplementPropertyType("propertyBedrooms")]
		public string PropertyBedrooms
		{
			get { return this.GetPropertyValue<string>("propertyBedrooms"); }
		}

		///<summary>
		/// Property Ensuites
		///</summary>
		[ImplementPropertyType("propertyEnsuites")]
		public string PropertyEnsuites
		{
			get { return this.GetPropertyValue<string>("propertyEnsuites"); }
		}

		///<summary>
		/// Property Feature 1
		///</summary>
		[ImplementPropertyType("propertyFeature1")]
		public string PropertyFeature1
		{
			get { return this.GetPropertyValue<string>("propertyFeature1"); }
		}

		///<summary>
		/// Property ID
		///</summary>
		[ImplementPropertyType("propertyID")]
		public string PropertyID
		{
			get { return this.GetPropertyValue<string>("propertyID"); }
		}

		///<summary>
		/// Property Kitchens
		///</summary>
		[ImplementPropertyType("propertyKitchens")]
		public string PropertyKitchens
		{
			get { return this.GetPropertyValue<string>("propertyKitchens"); }
		}

		///<summary>
		/// Property Reception Rooms
		///</summary>
		[ImplementPropertyType("propertyReceptionRooms")]
		public string PropertyReceptionRooms
		{
			get { return this.GetPropertyValue<string>("propertyReceptionRooms"); }
		}

		///<summary>
		/// Property Tenure: Property tenure. Indicates the tenure of the property. It is a numeric value:                                          0 = Not Specified 1 = Freehold 2 = Leasehold 3 = Commonhold 4 = Share of Freehold 5 = Flying Freehold 6 = Share Transfer 7 = Unknown
		///</summary>
		[ImplementPropertyType("propertyTenure")]
		public string PropertyTenure
		{
			get { return this.GetPropertyValue<string>("propertyTenure"); }
		}

		///<summary>
		/// Property Type
		///</summary>
		[ImplementPropertyType("propertyType")]
		public string PropertyType
		{
			get { return this.GetPropertyValue<string>("propertyType"); }
		}

		///<summary>
		/// Region ID
		///</summary>
		[ImplementPropertyType("regionID")]
		public string RegionID
		{
			get { return this.GetPropertyValue<string>("regionID"); }
		}

		///<summary>
		/// Sale By: Property for sale by. Indicates type of sale on the property. It is a numeric value:                    0 = Not Specified 1 = Private Treaty 2 = By Auction 3 = Confidential 4 = By Tender 5 = Offers Invited
		///</summary>
		[ImplementPropertyType("saleBy")]
		public string SaleBy
		{
			get { return this.GetPropertyValue<string>("saleBy"); }
		}
	}

	/// <summary>ezSearch</summary>
	[PublishedContentModel("ezSearch")]
	public partial class EzSearch : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "ezSearch";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public EzSearch(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<EzSearch, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Hide page?
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return this.GetPropertyValue<bool>("umbracoNaviHide"); }
		}
	}

	/// <summary>Property Overview</summary>
	[PublishedContentModel("umbPropertyOverview")]
	public partial class UmbPropertyOverview : UmbMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "umbPropertyOverview";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UmbPropertyOverview(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UmbPropertyOverview, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Proprty Type
		///</summary>
		[ImplementPropertyType("proprtyType")]
		public object ProprtyType
		{
			get { return this.GetPropertyValue("proprtyType"); }
		}
	}

	/// <summary>Home</summary>
	[PublishedContentModel("umbHomePage")]
	public partial class UmbHomePage : UmbMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "umbHomePage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public UmbHomePage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<UmbHomePage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Property Map</summary>
	[PublishedContentModel("propertyMap")]
	public partial class PropertyMap : UmbMaster
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "propertyMap";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public PropertyMap(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<PropertyMap, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Folder</summary>
	[PublishedContentModel("Folder")]
	public partial class Folder : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Folder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Folder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Folder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Contents:
		///</summary>
		[ImplementPropertyType("contents")]
		public object Contents
		{
			get { return this.GetPropertyValue("contents"); }
		}
	}

	/// <summary>Image</summary>
	[PublishedContentModel("Image")]
	public partial class Image : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Image";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Image(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Image, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload image
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public object UmbracoFile
		{
			get { return this.GetPropertyValue("umbracoFile"); }
		}

		///<summary>
		/// Height
		///</summary>
		[ImplementPropertyType("umbracoHeight")]
		public string UmbracoHeight
		{
			get { return this.GetPropertyValue<string>("umbracoHeight"); }
		}

		///<summary>
		/// Width
		///</summary>
		[ImplementPropertyType("umbracoWidth")]
		public string UmbracoWidth
		{
			get { return this.GetPropertyValue<string>("umbracoWidth"); }
		}
	}

	/// <summary>File</summary>
	[PublishedContentModel("File")]
	public partial class File : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "File";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public File(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<File, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload file
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public object UmbracoFile
		{
			get { return this.GetPropertyValue("umbracoFile"); }
		}
	}

	/// <summary>Member</summary>
	[PublishedContentModel("Member")]
	public partial class Member : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Member";
		public new const PublishedItemType ModelItemType = PublishedItemType.Member;
#pragma warning restore 0109

		public Member(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Member, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Is Approved
		///</summary>
		[ImplementPropertyType("umbracoMemberApproved")]
		public bool UmbracoMemberApproved
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberApproved"); }
		}

		///<summary>
		/// Comments
		///</summary>
		[ImplementPropertyType("umbracoMemberComments")]
		public string UmbracoMemberComments
		{
			get { return this.GetPropertyValue<string>("umbracoMemberComments"); }
		}

		///<summary>
		/// Failed Password Attempts
		///</summary>
		[ImplementPropertyType("umbracoMemberFailedPasswordAttempts")]
		public string UmbracoMemberFailedPasswordAttempts
		{
			get { return this.GetPropertyValue<string>("umbracoMemberFailedPasswordAttempts"); }
		}

		///<summary>
		/// Last Lockout Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLockoutDate")]
		public string UmbracoMemberLastLockoutDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLockoutDate"); }
		}

		///<summary>
		/// Last Login Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLogin")]
		public string UmbracoMemberLastLogin
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLogin"); }
		}

		///<summary>
		/// Last Password Change Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastPasswordChangeDate")]
		public string UmbracoMemberLastPasswordChangeDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastPasswordChangeDate"); }
		}

		///<summary>
		/// Is Locked Out
		///</summary>
		[ImplementPropertyType("umbracoMemberLockedOut")]
		public bool UmbracoMemberLockedOut
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberLockedOut"); }
		}

		///<summary>
		/// Password Answer
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalAnswer")]
		public string UmbracoMemberPasswordRetrievalAnswer
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalAnswer"); }
		}

		///<summary>
		/// Password Question
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalQuestion")]
		public string UmbracoMemberPasswordRetrievalQuestion
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalQuestion"); }
		}
	}

}



// EOF
